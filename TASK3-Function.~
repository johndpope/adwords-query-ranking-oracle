CREATE OR REPLACE FUNCTION TASK3(q in number, topk in number)
RETURN NUMBER
IS
PRAGMA AUTONOMOUS_TRANSACTION;

i_temp number;
i_temp2 float;
i_temp3 float;
i_ctc number;
i_modadcount number;
cursor ctokens(id QUERIES.qid%type) is
     select word, count(word) as tcount from (with t as (select query as txt from queries where qid=id) select REGEXP_SUBSTR (txt, '[^[:space:]]+', 1, level) as word from t connect by level <= length(regexp_replace(txt,'[^[:space:]]+'))+1) where word !=' ' group by word;

BEGIN
--split query into tokens
select count(*) into i_temp from QUERYTOKENS where QUERYTOKENS.qid=q;
if i_temp = 0 then
      FOR tokens in ctokens(q)
      LOOP
          select count(*) into i_temp from QUERYTOKENS where QUERYTOKENS.qid=q and QUERYTOKENS.token=tokens.word;
          IF i_temp = 0
          then
            INSERT INTO QUERYTOKENS(QID,TOKEN, tcount)  VALUES(q,tokens.word, tokens.tcount);
            commit;
            end if;
      END LOOP;
  commit;
end if;


--JOIN TOKENS with KEYWORDS
select count(*) into i_temp from bidders where bidders.queryid=q;
if i_temp = 0 then
      FOR ADS IN (select k.advertiserid, sum(bid) as bidsum from keywords k, querytokens q
      where lower(q.token)=lower(k.keyword) and
      q.qid=q
      group by k.advertiserid having sum(bid)<=(select BUDGET_GR2 from budget where advertiserid=k.advertiserid))
      LOOP
        INSERT INTO BIDDERS(queryid, advertiserid, bidsum, qualityscore) VALUES (q, ADS.advertiserid, ADS.bidsum, qualityscore(q,ADS.advertiserid));
        commit;
    END LOOP;
end if;

--select final bidders
FOR ADS IN (select rownum, queryid, advertiserid, bidsum, qualityscore from (SELECT * from BIDDERS WHERE queryid=q order by(((BIDDERS.bidsum*(1-POWER(2.71828,(-(select BUDGET_GE1 from budget where budget.advertiserid=BIDDERS.advertiserid)/(select advertisers.budget from advertisers where advertisers.advertiserid=bidders.advertiserid))))))*qualityscore) desc, ADVERTISERID) bidders2 where rownum<=topk order by rownum)
LOOP
  select ctc*100 into i_ctc from advertisers where advertiserid=ads.advertiserid;
  SELECT adcount3 into i_modadcount from adcount where advertiserid=ads.advertiserid;
   update adcount set adcount3=adcount3+1 where advertiserid=ads.advertiserid;
  IF  (((MOD(i_modadcount,100)) >= 0) and ((MOD(i_modadcount,100)) < i_ctc))
  THEN
    update budget set BUDGET_GE1=BUDGET_GE1 - ADS.bidsum where advertiserid=ads.advertiserid;
    commit;
   END IF;
   select BUDGET_GE1 into i_temp3 from budget where advertiserid=ads.advertiserid;
   select budget into i_temp2 from advertisers where advertiserid=ads.advertiserid;
   --CREATE TABLE TASK1ADS (QID INTEGER, RANK INTEGER, ADVERTISERID INTEGER, BALANCE FLOAT, BUDGET FLOAT);
   INSERT INTO TASK3ADS(qid, rank, advertiserid, balance, budget1) values(ADS.queryid, ads.rownum, ads.advertiserid, i_temp3, i_temp2 );-- , itemp2);
   commit;
END LOOP;


commit;
return 0;
END;
/
